name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'AWS-CustomerServ/frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'AWS-CustomerServ/frontend/**'
  workflow_dispatch:  # Manuel tetikleme için

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: AWS-CustomerServ/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: AWS-CustomerServ/frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          # Node.js bağımlılıklarını yükleme
          echo "Node.js bağımlılıkları yükleniyor..."
          npm ci
      
      - name: Lint
        run: |
          # Kod kalitesi kontrolü
          echo "Kod kalitesi kontrolü yapılıyor..."
          npm run lint
      
      - name: Build
        run: |
          # Frontend uygulamasını derleme
          echo "Frontend uygulaması derleniyor..."
          npm run build
      
      - name: Test
        run: |
          # Testleri çalıştırma
          echo "Testler çalıştırılıyor..."
          npm test || true
          # Not: || true ifadesi, test hataları olsa bile pipeline'ın devam etmesini sağlar
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to AWS S3
        run: |
          # Frontend uygulamasını S3'e dağıtma
          echo "Frontend uygulaması S3'e dağıtılıyor..."
          
          # S3 bucket'a dosyaları yükleme
          echo "Statik dosyalar S3'e yükleniyor..."
          aws s3 sync .next/static s3://${{ secrets.S3_BUCKET }}/_next/static/ --delete
          
          echo "Server dosyaları S3'e yükleniyor..."
          aws s3 cp .next/server/pages s3://${{ secrets.S3_BUCKET }}/_next/server/pages/ --recursive
          aws s3 cp .next/server/chunks s3://${{ secrets.S3_BUCKET }}/_next/server/chunks/ --recursive
          
          echo "Public dosyaları S3'e yükleniyor..."
          aws s3 cp public s3://${{ secrets.S3_BUCKET }}/public/ --recursive
      
      - name: Invalidate CloudFront Cache
        run: |
          # CloudFront önbelleğini temizleme (eğer CloudFront kullanılıyorsa)
          echo "CloudFront önbelleği temizleniyor..."
          if [ ! -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          else
            echo "CloudFront Distribution ID tanımlanmamış, önbellek temizleme adımı atlanıyor."
          fi 